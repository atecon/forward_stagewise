set verbose off
clear

#include ridge.gfn --force

set workdir "/home/at/git/forward_stagewise"

include string_utils.gfn
#include ridge.gfn           # min. v1.11
include "./src/fsreg.inp" --force

scalar runEX = 1		# select an example

# Select an example
if runEX==1
    open australia.gdt -q --preserve

    # define the variables
    series LHS = ldiff(PAU)
    list RHS = const LHS(-1 to -2) IUS(-1 to -2)  IAU(-1 to -2)

    ols LHS RHS

elif runEX==2
    # SIMULATION
    nulldata 750
    set seed 1234
    setobs 1 1 --time-series
    scalar k = 35
    series e = normal()
    series LHS = 1
    series LHS = 4.5 + 0.8*LHS(-1) - 0.4*LHS(-2) + e
    matrix X = mnormal($nobs, k)		# further exogenous
    list RHS = const LHS(-1 to -6)		# arbtrary lags of the endogenous
    loop i=1..cols(X) -q
        RHS += genseries(sprintf("S%d", $i), X[,i])
    endloop

    ols LHS RHS
endif

# run the main function with default values
bundle opts = null
scalar opts.verbose = 1
scalar opts.eta = 0.05                  # learning rate
scalar opts.max_num_iterations = 5000  # max. number of boosting rounds
scalar opts.early_stopping_rounds = 30 # stop if no improvement after n rounds


# Run estimation
bundle B = fsreg(LHS, RHS, opts)
print B

# Print estimation results
print_fsreg_results(B)

# Retrieve point estimates
eval B.coeff            # retrieve point estimates of all variables
eval B.coeff_nonzero    # retrieve point estimates of selected variables

# Plot correlations as a function of iterations
plot_rho_values(B)

# Plot coefficient paths
plot_coefficient_paths(B)

